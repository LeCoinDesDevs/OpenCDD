name: Build

on:
  workflow_dispatch:

  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - name: echo ENV
        run: echo ${{ env }}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: true
      - name: Rename Build
        run: mv target/${{ matrix.target }}/release/cddio target/${{ matrix.target }}/release/cddio-${{ matrix.target }}
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: cddio-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/cddio-${{ matrix.target }}

  release:
    needs: build
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Retreive version from Cargo.toml
        id: version
        run: echo ::set-output name=version::$(grep -m1 version Cargo.toml | cut -d '"' -f2)
      - name: Download build artifact
        uses: actions/download-artifact@v2
      - name: Upload to Release
        uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            cddio-aarch64-unknown-linux-gnu/cddio-aarch64-unknown-linux-gnu
            cddio-aarch64-unknown-linux-musl/cddio-aarch64-unknown-linux-musl
            cddio-x86_64-unknown-linux-gnu/cddio-x86_64-unknown-linux-gnu
          tag: v${{ steps.version.outputs.version }}
          name: CDDIO-v${{ steps.version.outputs.version }}
          allow_override: true
